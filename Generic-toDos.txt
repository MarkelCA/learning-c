[X]........Made
[/]........In process / Not finished
[ ]........To do


0. Fun Facts
---------------------------------
Templates: Java's Arraylist is one example of templating and generic types
Application: There's a online C/C++ compilator at: https://www.onlinegdb.com/

1. Fundamentals: Memory management in computer science
-----------------------------
[X] Code space vs data space
[X] Virtual memory vs Physical memory
[X] Fragmentation
[X] Stack vs Heap: https://www.guru99.com/stack-vs-heap.html, https://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap
[/] Shared Libraries (Library computing)
[ ] Symbol Table in Compiler: https://www.geeksforgeeks.org/symbol-table-compiler/
[ ] Chunks: https://en.wikipedia.org/wiki/Chunking_(computing)#In_memory_management
[ ] System file formats
[ ] Program vs Proccess: https://en.wikipedia.org/wiki/Process_isolation, https://en.wikipedia.org/wiki/Process_(computing)
[ ] Memory segments: http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch10s02.html

Resources: 

1.1 https://en.wikipedia.org/wiki/Addressing_mode
1.2 https://en.wikipedia.org/wiki/Code_segment
1.3 https://en.wikipedia.org/wiki/Object_file
1.4 https://en.wikipedia.org/wiki/Offset_(computer_science)
1.5 https://en.wikipedia.org/wiki/Relocation_(computing)
1.6 https://en.wikipedia.org/wiki/Memory_address#absolute_address
1.7 https://en.wikipedia.org/wiki/Data_segment
1.8 https://www.geeksforgeeks.org/data-structures/


2. Algorithms
-----------------------------
[X] Understand time complexity
[X] Quick sort
[/] Why is Quick sort faster than other alorithms if its time complexity is bigger - 2.1
[ ] Merge sort
[ ] Understand Space complexity


Resources: 
2.1 Why is better quicksort vs other algorithms: https://cs.stackexchange.com/questions/3/why-is-quicksort-better-than-other-sorting-algorithms-in-practice
2.2 Array sorting algorithms: https://www.toptal.com/developers/sorting-algorithms
2.3 Heapsort vs Quicksort: https://stackoverflow.com/questions/2467751/quicksort-vs-heapsort/14441803
2.4 Analysis of algorithms: https://www.geeksforgeeks.org/analysis-of-algorithems-little-o-and-little-omega-notations/
2.5 Time complexity comparison cheat list: https://www.bigocheatsheet.com/
2.6 Time complexity explanation: https://www.studytonight.com/data-structures/time-complexity-of-algorithms
2.7 Rotation of arrays (Index): https://www.geeksforgeeks.org/array-data-structure/#rotation
2.8 Rotation of arays: https://www.geeksforgeeks.org/array-rotation/
2.9 Quick sort: https://www.studytonight.com/data-structures/quick-sort
2.10 Tipes of notation: https://beginnersbook.com/2018/10/ds-asymptotic-notation/
2.11 Graphic reresentation of equations: https://www.geogebra.org/graphing?lang=es
